CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  email varchar(64) NOT NULL,
  login varchar(32) NOT NULL,
  name varchar(32) ,
  birthday date,
  CONSTRAINT usr_id_pk PRIMARY KEY (id),
  CONSTRAINT usr_email_unq UNIQUE (email),
  CONSTRAINT usr_login_unq UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS films (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  title varchar(200) NOT NULL,
  description varchar(200) NOT NULL,
  release date,
  duration INTEGER,
  rating_id INTEGER,
  CONSTRAINT flm_id_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS genres (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY,
  category varchar(50) NOT NULL DEFAULT 'N/A',
  CONSTRAINT gnr_id_pk  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS friend_request (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user1_id BIGINT REFERENCES users (id),
  user2_id BIGINT REFERENCES users (id),
  initiator_id BIGINT REFERENCES users (id),
  CONSTRAINT frq_pk PRIMARY KEY (id, user1_id, user2_id),
  CONSTRAINT frq_uniq CHECK (user1_id < user2_id)
);

CREATE TABLE IF NOT EXISTS friends_confirmed (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user1_id BIGINT REFERENCES users (id),
  user2_id BIGINT REFERENCES users (id),
  initiator_id BIGINT REFERENCES users (id),
  CONSTRAINT fcf_pk PRIMARY KEY (id, user1_id, user2_id),
  CONSTRAINT fcf_uniq CHECK (user1_id < user2_id)
);

CREATE TABLE IF NOT EXISTS user_liked_film (
  user_id BIGINT REFERENCES users (id) NOT NULL,
  film_id BIGINT REFERENCES films (id) NOT NULL,
  CONSTRAINT flk_pk PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS rating_MPA (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY,
  rating varchar(8) NOT NULL DEFAULT 'PG',
  description varchar(100) DEFAULT '',
  CONSTRAINT rtg_id_pk PRIMARY KEY (id)
);